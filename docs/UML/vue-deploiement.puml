@startuml
title Vue Physique - Lab6 (Orchestrée) + Lab7 (Événementiel)
skinparam componentStyle rectangle
skinparam shadowing false
skinparam linetype ortho
left to right direction

' === OBSERVABILITÉ ===
node "Observabilité" {
  component "Grafana" as grafana
  note right of grafana : 3000
  component "Prometheus" as prometheus
  note right of prometheus : 9090
}

' === FRONTEND APPLI ===
node "client-app" {
  component "NGINX" as nginx
  note right of nginx : 80
  component "Django App" as djangoApp
  note right of djangoApp : 8000 (interne)
}

' === API GATEWAY ===
node "Kong API Gateway" as kong
note right of kong : 8080 proxy / 8081 admin

' === BROKER & EVENT STORE (Lab7) ===
node "Eventing" {
  component "Redis Streams" as redis
  note right of redis : 6379
  component "Event Store (Flask)" as eventstore
  note right of eventstore : 7010
}

' === MICROSERVICES ===
node "catalogue-service-*" {
  component "Catalogue 1" as cat1
  note right of cat1 : 8001
  component "Catalogue 2" as cat2
  note right of cat2 : 8006
  component "Catalogue 3" as cat3
  note right of cat3 : 8007
}

node "inventaire-service" {
  component "Inventaire" as inv
  note right of inv : 8002
}

node "commandes-service" {
  component "Commandes" as cmd
  note right of cmd : 8003
}

node "supply-chain-service" {
  component "Supply Chain" as sup
  note right of sup : 8004
}

node "ecommerce-service" {
  component "E-commerce" as eco
  note right of eco : 8005
}

' === WORKERS (Lab7 – Chorégraphie & CQRS) ===
node "Workers" {
  component "stock-reservation-worker" as w_res
  note right of w_res : 9102
  component "order-creation-worker" as w_ord
  note right of w_ord : 9103
  component "stock-compensation-worker" as w_comp
  note right of w_comp : 9104
  component "notification-worker" as w_notif
  note right of w_notif : 9100
  component "audit-worker" as w_audit
  note right of w_audit : 9101
  component "cqrs-projection-worker" as w_cqrs
  note right of w_cqrs : 9105
}

' === BASES DE DONNÉES ===
database "Catalogue DB (5434)" as catalogueDb
database "Inventaire DB (5435)" as inventaireDb
database "Commandes DB (5436)" as commandesDb
database "SupplyChain DB (5437)" as supplyChainDb
database "Ecommerce DB (5438)" as ecommerceDb
database "Kong DB (5433)" as kongDb

' === TRAFIC UTILISATEUR ===
nginx --> djangoApp : proxy_pass
djangoApp --> kong : HTTP clients

' === KONG ROUTING ===
kong --> cat1 : /api/catalogue (LB)
kong --> cat2
kong --> cat3
kong --> inv : /api/inventaire
kong --> cmd : /api/commandes
kong --> sup : /api/supply-chain
kong --> eco : /api/ecommerce

' === PERSISTANCE ===
cat1 --> catalogueDb
cat2 --> catalogueDb
cat3 --> catalogueDb
inv --> inventaireDb
cmd --> commandesDb
sup --> supplyChainDb
eco --> ecommerceDb
kong --> kongDb

' === LAB6 ORCHESTRATION (rappel) ===
component "service-saga-orchestrator" as orchestrator
note right of orchestrator : 8009
djangoApp ..> orchestrator : appels Saga (Lab6)
orchestrator ..> inv : vérif/réservation stock
orchestrator ..> cmd : créer commande

' === LAB7 PUB/SUB ===
eco --> redis : publish CheckoutInitiated
w_res --> redis : subscribe (choreo-reservation)
w_res ..> inv : diminuer-stock
w_res --> redis : publish StockReserved | StockReservationFailed
w_ord --> redis : subscribe (choreo-order)
w_ord ..> cmd : enregistrer-vente
w_ord --> redis : publish OrderCreated | CheckoutSucceeded | OrderCreationFailed
w_comp --> redis : subscribe (choreo-compensation)
w_comp ..> inv : augmenter-stock
w_comp --> redis : publish StockReleased | CheckoutFailed
w_notif --> redis : subscribe (notification)
w_audit --> redis : subscribe (audit)
w_cqrs --> redis : subscribe (cqrs)
eventstore ..> redis : lecture streams + replay

' === MONITORING ===
prometheus --> nginx : scrape /metrics
prometheus --> orchestrator : scrape /metrics
prometheus --> eco : scrape /metrics
prometheus --> w_res : scrape /metrics
prometheus --> w_ord : scrape /metrics
prometheus --> w_comp : scrape /metrics
prometheus --> w_notif : scrape /metrics
prometheus --> w_audit : scrape /metrics
prometheus --> w_cqrs : scrape /metrics
grafana --> prometheus : Dashboards

@enduml